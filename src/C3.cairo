use starknet::ContractAddress;

#[abi]
trait IBalanceChecker {
    #[view]
    fn balance_of(addr: ContractAddress) -> u256;
}


#[contract]
mod C3 {

    // Those two are auto-generated by #[abi] macro.
    use super::IBalanceCheckerDispatcher;
    use super::IBalanceCheckerDispatcherTrait;

    use starknet::ContractAddress;

    struct Storage {
        checker_addr: ContractAddress,
    }

    #[constructor]
    fn constructor(
        checker_addr_: ContractAddress
    ) {
        checker_addr::write(checker_addr_);
    }

    // This method can be seen as a "proxy". We are deporting
    // the balance retrieval to the storer contract.
    #[view]
    fn balance_of(addr: ContractAddress) -> u256 {
        IBalanceCheckerDispatcher { contract_address: checker_addr::read() }.balance_of(addr)
    }

}
